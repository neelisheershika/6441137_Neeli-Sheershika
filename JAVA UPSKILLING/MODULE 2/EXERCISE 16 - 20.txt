EXERCISE 16

SELECT
    ->     u.*
    -> FROM
    ->     Users u
    -> LEFT JOIN
    ->     Registrations r ON u.user_id = r.user_id
    -> WHERE
    ->     u.registration_date >= CURDATE() - INTERVAL 30 DAY
    ->     AND r.registration_id IS NULL;
Empty set (0.00 sec)

EXERCISE 17

SELECT
    ->     speaker_name,
    ->     COUNT(session_id) AS session_count
    -> FROM
    ->     Sessions
    -> GROUP BY
    ->     speaker_name
    -> HAVING
    ->     COUNT(session_id) > 1;
Empty set (0.00 sec)

EXERCISE 18

 SELECT
    ->     e.title
    -> FROM
    ->     Events e
    -> LEFT JOIN
    ->     Resources r ON e.event_id = r.event_id
    -> GROUP BY
    ->     e.event_id
    -> HAVING
    ->     COUNT(r.resource_id) = 0;
+-------------------------------+
| title                         |
+-------------------------------+
| Tech Innovators Meetup        |
| AI & ML Conference            |
| Frontend Development Bootcamp |
+-------------------------------+
3 rows in set (0.00 sec)

EXERCISE 19

SELECT
    ->     e.title,
    ->     COUNT(DISTINCT r.registration_id) AS total_registrations,
    ->     AVG(f.rating) AS avg_rating
    -> FROM
    ->     Events e
    -> LEFT JOIN
    ->     Registrations r ON e.event_id = r.event_id
    -> LEFT JOIN
    ->     Feedback f ON e.event_id = f.event_id
    -> WHERE
    ->     e.status = 'completed'
    -> GROUP BY
    ->     e.event_id;
+--------------------+---------------------+------------+
| title              | total_registrations | avg_rating |
+--------------------+---------------------+------------+
| AI & ML Conference |                   2 |     4.5000 |
+--------------------+---------------------+------------+
1 row in set (0.00 sec)

EXERCISE 20

SELECT
    ->     u.full_name,
    ->     COUNT(DISTINCT r.event_id) AS events_attended,
    ->     COUNT(DISTINCT f.feedback_id) AS feedbacks_given
    -> FROM
    ->     Users u
    -> LEFT JOIN
    ->     Registrations r ON u.user_id = r.user_id
    -> LEFT JOIN
    ->     Feedback f ON u.user_id = f.user_id
    -> GROUP BY
    ->     u.user_id;
+---------------+-----------------+-----------------+
| full_name     | events_attended | feedbacks_given |
+---------------+-----------------+-----------------+
| Alice Johnson |               1 |               0 |
| Bob Smith     |               1 |               1 |
| Charlie Lee   |               1 |               1 |
| Diana King    |               1 |               1 |
| Ethan Hunt    |               1 |               0 |
+---------------+-----------------+-----------------+
5 rows in set (0.00 sec)
