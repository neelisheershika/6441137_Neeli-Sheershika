EXERCISE 11

SELECT
    ->     registration_date,
    ->     COUNT(user_id) AS new_users
    -> FROM
    ->     Users
    -> WHERE
    ->     registration_date >= CURDATE() - INTERVAL 7 DAY
    -> GROUP BY
    ->     registration_date;
Empty set (0.00 sec)

EXERCISE 12

mysql> SELECT
    ->     e.title,
    ->     COUNT(s.session_id) AS session_count
    -> FROM
    ->     Events e
    -> JOIN
    ->     Sessions s ON e.event_id = s.event_id
    -> GROUP BY
    ->     e.event_id
    -> ORDER BY
    ->     session_count DESC
    -> LIMIT 1;
+------------------------+---------------+
| title                  | session_count |
+------------------------+---------------+
| Tech Innovators Meetup |             2 |
+------------------------+---------------+
1 row in set (0.00 sec)

EXERCISE 13

SELECT
    ->     e.city,
    ->     AVG(f.rating) AS avg_rating
    -> FROM
    ->     Events e
    -> JOIN
    ->     Feedback f ON e.event_id = f.event_id
    -> GROUP BY
    ->     e.city;
+----------+------------+
| city     | avg_rating |
+----------+------------+
| New York |     3.0000 |
| Chicago  |     4.5000 |
+----------+------------+
2 rows in set (0.00 sec)

EXERCISE 14

SELECT
    ->     e.title,
    ->     COUNT(r.registration_id) AS total_registrations
    -> FROM
    ->     Events e
    -> JOIN
    ->     Registrations r ON e.event_id = r.event_id
    -> GROUP BY
    ->     e.event_id
    -> ORDER BY
    ->     total_registrations DESC
    -> LIMIT 3;
+-------------------------------+---------------------+
| title                         | total_registrations |
+-------------------------------+---------------------+
| Tech Innovators Meetup        |                   2 |
| AI & ML Conference            |                   2 |
| Frontend Development Bootcamp |                   1 |
+-------------------------------+---------------------+
3 rows in set (0.00 sec)

EXERCISE 15

SELECT
    ->     s1.event_id,
    ->     s1.session_id AS session1,
    ->     s2.session_id AS session2
    -> FROM
    ->     Sessions s1
    -> JOIN
    ->     Sessions s2 ON s1.event_id = s2.event_id
    ->                 AND s1.session_id < s2.session_id
    -> WHERE
    ->     s1.end_time > s2.start_time AND s1.start_time < s2.end_time;
Empty set (0.00 sec)
